{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YUKTA CHAUDHARI\\\\Desktop\\\\NotesApp\\\\React-Notes-App\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport Alert from '../components/alert'; //custom hooks import\n\nimport useContextGetter from '../hooks/contextGetter';\nimport useLoggedIn from '../hooks/useLoggedIn';\nimport '../styles/regsiter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  //page push to notes page if isUserLoggedIn is true\n  useLoggedIn();\n  const {\n    register,\n    handleSubmit\n  } = useForm(); //useForm syntax\n\n  const context = useContextGetter(); //useContext\n\n  const [error, setError] = useState(''); //set error message\n\n  const handleRegister = ({\n    email,\n    password,\n    confirmPassword\n  }) => {\n    //check if password and confirmPassword match\n    if (password !== confirmPassword) {\n      setError(`Passwords don't match!`);\n    } //api register new user\n    //new user data object\n\n\n    let newUser = {\n      email: email,\n      password: password\n    };\n    fetch(`https://user-manager-three.vercel.app/api/user/register`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newUser) //always stringify objects             \n\n    }).then(response => response.json()) //close buffer and convert to json\n    .then(result => {\n      //if there is a request error return message\n      if (result.error) {\n        setError(result.message);\n      } else {\n        //else set user to logged in\n        context.dispatch({\n          type: 'LOGIN',\n          payload: result.body\n        });\n      }\n    }) //catch an error if there's another issue\n    .catch(err => {\n      setError('An error occurred. Please try again later.');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reg-form-section\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleRegister),\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reg-heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Manage your notes efficiently\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          ...register('email', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          ...register('password', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm-password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 79\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirm-password\",\n          id: \"confirm-password\",\n          ...register('confirmPassword', {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reg-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"log\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"8AOzzp7i+xknfUpaCiBfMHSD/uw=\", false, function () {\n  return [useLoggedIn, useForm, useContextGetter];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/YUKTA CHAUDHARI/Desktop/NotesApp/React-Notes-App/src/pages/Register.js"],"names":["React","useState","useForm","Link","Alert","useContextGetter","useLoggedIn","Register","register","handleSubmit","context","error","setError","handleRegister","email","password","confirmPassword","newUser","fetch","method","headers","body","JSON","stringify","then","response","json","result","message","dispatch","type","payload","catch","err","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport Alert from '../components/alert';\r\n//custom hooks import\r\nimport useContextGetter from '../hooks/contextGetter';\r\nimport useLoggedIn from '../hooks/useLoggedIn';\r\nimport '../styles/regsiter.css';\r\n\r\nfunction Register() {\r\n\r\n    //page push to notes page if isUserLoggedIn is true\r\n\tuseLoggedIn();\r\n\r\n    const { register, handleSubmit } = useForm(); //useForm syntax\r\n    const context = useContextGetter(); //useContext\r\n    const [error, setError] = useState(''); //set error message\r\n\r\n    const handleRegister = ({ email, password, confirmPassword }) => {\r\n        //check if password and confirmPassword match\r\n        if (password !== confirmPassword) {\r\n            setError(`Passwords don't match!`);\r\n        }\r\n\r\n        //api register new user\r\n        //new user data object\r\n        let newUser = {\r\n            email: email,\r\n            password: password\r\n        }\r\n\r\n        fetch(\r\n            `https://user-manager-three.vercel.app/api/user/register`,\r\n            {\r\n                method: 'POST',\r\n                headers: { 'content-type': 'application/json' },\r\n                body: JSON.stringify(newUser), //always stringify objects             \r\n            }\r\n        )\r\n            .then(response => response.json()) //close buffer and convert to json\r\n            .then(result => {\r\n                //if there is a request error return message\r\n                if (result.error) {\r\n                    setError(result.message)\r\n                } else {\r\n                    //else set user to logged in\r\n                    context.dispatch({\r\n                        type: 'LOGIN',\r\n                        payload: result.body\r\n                    });\r\n                }\r\n            })\r\n                //catch an error if there's another issue\r\n            .catch(err => {\r\n                setError('An error occurred. Please try again later.');\r\n            })\r\n    }\r\n    \r\n    return (\r\n        <div className='reg-form-section'>\r\n            <form onSubmit={handleSubmit(handleRegister)} className='register-form' >\r\n                <div className='reg-heading'>\r\n                    <h1>Register</h1>\r\n                    <p>Manage your notes efficiently</p>\r\n                    {error && <Alert error={error} />}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='email'>Email</label><br />\r\n                    <input\r\n                        type='email'\r\n                        name='email'\r\n                        id='email'\r\n                        {...register('email', { required: true })}\r\n                    /><br/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='password'>Password</label><br />\r\n                    <input\r\n                        type='password'\r\n                        name='password'\r\n                        id='password'\r\n                        {...register('password', { required: true })}\r\n                    /><br/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='confirm-password'>Confirm Password</label><br/>\r\n                    <input\r\n                        type='password'\r\n                        name='confirm-password'\r\n                        id='confirm-password'\r\n                        {...register('confirmPassword', { required: true })}\r\n                    /><br/>\r\n                </div>\r\n                <div className='reg-links'>\r\n                    <button type='submit' className='btn'>\r\n                        Register\r\n                    </button>\r\n                    <span>Already have an account? <Link to='/login' className='log'>Login</Link></span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}